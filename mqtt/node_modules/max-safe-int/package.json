{
  "_from": "max-safe-int@^1.0.0",
  "_id": "max-safe-int@1.0.0",
  "_inBundle": false,
  "_integrity": "sha1-RPuo7Jk97ZH7LFo15xz5yfNpzlI=",
  "_location": "/max-safe-int",
  "_phantomChildren": {},
  "_requested": {
    "type": "range",
    "registry": true,
    "raw": "max-safe-int@^1.0.0",
    "name": "max-safe-int",
    "escapedName": "max-safe-int",
    "rawSpec": "^1.0.0",
    "saveSpec": null,
    "fetchSpec": "^1.0.0"
  },
  "_requiredBy": [
    "/random-floating",
    "/random-integral"
  ],
  "_resolved": "https://registry.npmjs.org/max-safe-int/-/max-safe-int-1.0.0.tgz",
  "_shasum": "44fba8ec993ded91fb2c5a35e71cf9c9f369ce52",
  "_spec": "max-safe-int@^1.0.0",
  "_where": "/Users/toanchung/SIT209/topic7/mqtt/node_modules/random-floating",
  "author": {
    "name": "bubkoo",
    "email": "bubkoo.wy@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/mock-end/max-safe-int/issues"
  },
  "bundleDependencies": false,
  "deprecated": false,
  "description": "Return the maximum safe integer in JavaScript.",
  "devDependencies": {
    "jshint": "^2.9.1"
  },
  "homepage": "https://github.com/mock-end/max-safe-int#readme",
  "keywords": [
    "max",
    "safe",
    "maximum",
    "int",
    "integer",
    "const"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "max-safe-int",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/mock-end/max-safe-int.git"
  },
  "scripts": {
    "lint": "jshint index.js",
    "prepublish": "npm test",
    "pretest": "npm run lint",
    "test": "echo 0"
  },
  "version": "1.0.0"
}
